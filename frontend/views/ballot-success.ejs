<div class="ballot-container">
  <div class="ballot-sidebar">
    <a href="/elections" class="back-link">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M20 11H7.83L13.42 5.41L12 4L4 12L12 20L13.41 18.59L7.83 13H20V11Z" fill="currentColor"/>
      </svg>
    </a>
    
    <div class="question-nav">
      <h2>Overview</h2>
      
      <div class="question-nav-list">
        <a href="/elections" class="question-nav-item">
          <div class="question-nav-number">Thank you</div>
          <div class="question-nav-title">Your vote has been recorded</div>
        </a>
      </div>
    </div>
  </div>
  
  <div class="ballot-content">
    <div class="ballot-header">
      <a href="/elections" class="back-link">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M20 11H7.83L13.42 5.41L12 4L4 12L12 20L13.41 18.59L7.83 13H20V11Z" fill="currentColor"/>
        </svg>
        2024 Presidential Election - General Ballot
      </a>
      <div class="ballot-status">Completed</div>
    </div>
    
    <div class="success-card">
      <div class="success-icon">
        <svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
          <circle cx="50" cy="50" r="48" stroke="#4CAF50" stroke-width="4"/>
          <path d="M30 50L45 65L75 35" stroke="#4CAF50" stroke-width="5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </div>
      
      <div class="voted-badge">
        <svg width="120" height="120" viewBox="0 0 120 120" fill="none" xmlns="http://www.w3.org/2000/svg">
          <circle cx="60" cy="60" r="60" fill="#2E3B55"/>
          <circle cx="60" cy="60" r="54" fill="#3A4D6D"/>
          <path d="M60 12C33.49 12 12 33.49 12 60C12 86.51 33.49 108 60 108C86.51 108 108 86.51 108 60C108 33.49 86.51 12 60 12ZM60 96C40.14 96 24 79.86 24 60C24 40.14 40.14 24 60 24C79.86 24 96 40.14 96 60C96 79.86 79.86 96 60 96Z" fill="#4267B2"/>
          <rect x="24" y="48" width="72" height="8" fill="#fff"/>
          <rect x="24" y="64" width="72" height="8" fill="#fff"/>
          <path d="M40 32H80V40H40V32Z" fill="#fff"/>
          <path d="M40 80H80V88H40V80Z" fill="#fff"/>
          <path d="M37 44L46 53L37 62" fill="#fff"/>
          <path d="M83 76L74 67L83 58" fill="#fff"/>
          <text x="60" y="63" font-family="Arial" font-size="16" font-weight="bold" fill="white" text-anchor="middle">I VOTED</text>
        </svg>
      </div>
      
      <h1>Your vote has been counted.</h1>
      
      <p class="success-message">
        Thank you for making your voice heardâ€”your ballot has been successfully submitted and an email confirmation has been sent.
      </p>
      
      <div class="action-buttons">
        <a href="/election/2024_presidential" class="view-results-btn">
          View Live Results
          <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M9 3.375L7.88125 4.49375L12.1312 8.75H3.375V10.25H12.1312L7.88125 14.5062L9 15.625L15.125 9.5L9 3.375Z" fill="white"/>
          </svg>
        </a>
        
        <a href="/elections" class="return-home-btn">
          Return to My Elections
        </a>
      </div>
    </div>
  </div>
</div>

<script>
  // Confetti animation for celebration
  function launchConfetti() {
    const confettiCount = 200;
    const container = document.querySelector('.ballot-content');
    
    for (let i = 0; i < confettiCount; i++) {
      const confetti = document.createElement('div');
      confetti.className = 'confetti';
      
      // Random color
      const colors = ['#4267B2', '#4CAF50', '#FFC107', '#F44336', '#2196F3'];
      const randomColor = colors[Math.floor(Math.random() * colors.length)];
      confetti.style.backgroundColor = randomColor;
      
      // Random position
      confetti.style.left = `${Math.random() * 100}%`;
      
      // Random size
      const size = Math.random() * 10 + 5;
      confetti.style.width = `${size}px`;
      confetti.style.height = `${size}px`;
      
      // Random rotation
      confetti.style.transform = `rotate(${Math.random() * 360}deg)`;
      
      // Animation duration and delay
      confetti.style.animationDuration = `${Math.random() * 3 + 2}s`;
      confetti.style.animationDelay = `${Math.random() * 5}s`;
      
      container.appendChild(confetti);
      
      // Remove after animation
      setTimeout(() => {
        confetti.remove();
      }, 8000);
    }
  }
  
  // Launch confetti when page loads
  window.addEventListener('load', launchConfetti);
</script>

<style>
  .ballot-container {
    display: flex;
    min-height: 100vh;
    background-color: #f5f7fa;
    overflow: hidden;
  }
  
  .ballot-sidebar {
    width: 320px;
    background-color: white;
    border-right: 1px solid #eee;
    display: flex;
    flex-direction: column;
    padding: 20px 0;
  }
  
  .back-link {
    display: flex;
    align-items: center;
    color: var(--text-color);
    text-decoration: none;
    padding: 10px 20px;
    margin-bottom: 20px;
  }
  
  .question-nav {
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 0 20px;
  }
  
  .question-nav h2 {
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 20px;
    color: var(--text-color);
    text-align: left;
  }
  
  .question-nav-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
    overflow-y: auto;
    flex: 1;
  }
  
  .question-nav-item {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    color: var(--text-color);
    padding: 10px;
    border-radius: 6px;
  }
  
  .question-nav-item:hover {
    background-color: rgba(66, 103, 178, 0.05);
  }
  
  .question-nav-number {
    font-size: 12px;
    color: var(--light-text);
    margin-bottom: 4px;
  }
  
  .question-nav-title {
    font-size: 14px;
    font-weight: 500;
  }
  
  .ballot-content {
    flex: 1;
    padding: 30px;
    max-width: 800px;
    margin: 0 auto;
    position: relative;
  }
  
  .ballot-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
  }
  
  .ballot-header .back-link {
    font-size: 18px;
    font-weight: 500;
    margin-bottom: 0;
    padding: 0;
  }
  
  .ballot-header svg {
    margin-right: 8px;
  }
  
  .ballot-status {
    color: var(--success-color);
    font-size: 14px;
    font-weight: 500;
  }
  
  .success-card {
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    padding: 40px;
    text-align: center;
  }
  
  .success-icon {
    margin-bottom: 20px;
  }
  
  .voted-badge {
    margin: 30px auto;
  }
  
  .success-card h1 {
    font-size: 24px;
    font-weight: 600;
    margin-bottom: 20px;
    color: var(--success-color);
  }
  
  .success-message {
    font-size: 16px;
    color: var(--text-color);
    max-width: 500px;
    margin: 0 auto 40px;
    line-height: 1.6;
  }
  
  .action-buttons {
    display: flex;
    flex-direction: column;
    gap: 15px;
    max-width: 300px;
    margin: 0 auto;
  }
  
  .view-results-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    background-color: var(--accent-color);
    color: white;
    border: none;
    padding: 12px;
    border-radius: 6px;
    font-weight: 500;
    text-decoration: none;
    transition: background-color 0.3s;
  }
  
  .view-results-btn:hover {
    background-color: var(--primary-color);
  }
  
  .return-home-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;
    border: 1px solid var(--accent-color);
    color: var(--accent-color);
    padding: 12px;
    border-radius: 6px;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.3s;
  }
  
  .return-home-btn:hover {
    background-color: rgba(66, 103, 178, 0.05);
  }
  
  /* Confetti animation */
  .confetti {
    position: absolute;
    top: -20px;
    width: 10px;
    height: 10px;
    background-color: #4267B2;
    opacity: 0.7;
    animation: fall linear forwards;
  }
  
  @keyframes fall {
    to {
      transform: translateY(100vh) rotate(720deg);
      opacity: 0;
    }
  }
</style> 